import sysimport mathimport timefrom Features.Move import *from Features.Arm import *from Features.Stop import *from Features.Head import *##from naoqi import ALProxyfrom naoqi import ALBrokerfrom naoqi import ALModule##   def main():        'NAOIP_ORANGE: 193.48.125.63'        'NAOIP_GRIS: 193.48.125.62'          robotIP= "193.48.125.63";        nao = Nao(robotIP,9559)        tts = ALProxy("ALTextToSpeech", robotIP, 9559)        tts.setLanguage("French")# attention mise en anglais dans les proxy  a verifier         'Initialization of the different features'          sT = Stop()        mO = Move()        aR= Arm()        tT= Head()        feature={                    "forward":False,                    "backward":False,                    "right":False,                    "left":False,                    "stop":False,                    "arm":False,                    "head":[0.0 ,0.0 ]                    }                          def avant():             feature["forward"] = True             mO.runOnRobot(nao, feature)              feature["forward"] = False                 def arriere():            feature["backward"] = True            mO.runOnRobot(nao, feature)             feature["backward"] = False        def gauche():            feature["left"] = True            mO.runOnRobot(nao, feature)             feature["left"] = False        def droite():            feature["right"] = True            mO.runOnRobot(nao, feature)            feature["right"] = False                def arret():            print("arret demande")            motionProxy = ALProxy("ALMotion", robotIP, 9559)            motionProxy.stopMove()                def bras():            feature["arm"] = True            aR.runOnRobot(nao,feature)            feature["arm"] = False        def tete():                       tT.runOnRobot(nao,feature)        while(True):                              # root.mainloop() #              feature["head"][0]=0.5 ## convertir en degre #              feature["head"][1]=0.5                                            #bras()               print(type(feature["head"][0]))              # time.sleep(5)                 ##               avant()##               time.sleep(5)               ##               arret()##               time.sleep(2)               droite()               time.sleep(1)               arret()               time.sleep(5)##               arriere()##               time.sleep(2)##               arret()##               time.sleep(2)                                  ##               if  self.feature["stop"]:##                   arret()##               elif  self.feature["forward"] :##                   avant()##               elif  self.feature["backward"] :##                   arriere()##               elif self.feature["right"]:##                   droite()##               elif self.feature["left"] :##                   gauche ()##               elif self.feature["arm"] :##                    bras ()##               elif self.feature["head"] :##                    tete ()                                              if __name__ == "__main__":         main()