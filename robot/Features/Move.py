# -*- coding: utf-8 -*-# Feature : mouvement et rotation from NaoApplication import *from Features import *import timefrom naoqi import ALProxyclass Move(Features):    def __init__(self, robotProxy):        self.name = "Move"        self.bot = robotProxy    def run(self, robotIP, feature):        # Instanciation proxy pour les mouvements des bras lors de la marche        motionProxy = self.bot.gMotionProxy                  # Activation mouvement automatique des bras lors de la marche        motionProxy.setMoveArmsEnabled(True, True)        # Instanciation proxy pour la rotation           navigationProxy = self.bot.gNavigationProxy               # Activation des detections des obstacles        motionProxy.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION", True]])              # si demande de mouvement en  x et y        if feature["forward"][0]!=0.0 or feature["forward"][1]!=0.0 :               x     = feature["forward"][0]/100.0            y     = feature["forward"][1]/100.0            theta = 0.0            frequency = 1.0            motionProxy.moveToward(x, y, theta, [["Frequency", frequency]])                  # si demande de rotation        elif feature["rotation"] != 0 :             navigationProxy.moveTo(0.0, 0.0, feature["rotation"])                                      