import sysimport timeimport randomimport mathimport motionimport almath as m # python's wrapping of almathimport almathimport argparseimport timefrom naoqi import ALProxyfrom naoqi import ALBrokerfrom naoqi import ALModulefrom Robot import *from NaoApplication import *from Features import *from InitRobot import *class Arm(Features):    def __init__(self):              self.name = "Arm"        self.state=0        def run(self, robotIP,command):               try:            motionProxy = ALProxy("ALMotion", robotIP, 9559)        except Exception, e:            print "Could not create proxy to ALMotion"            print "Error was: ", e                   try:            postureProxy = ALProxy("ALRobotPosture", robotIP, 9559)        except Exception, e:            print "Could not create proxy to ALRobotPosture"            print "Error was: ", e                    try:            navigationProxy = ALProxy("ALNavigation", robotIP, 9559)        except Exception, e:            print "Could not create proxy to ALRobotNavigation"            print "Error was: ", e                try:            memoryProxy = ALProxy("ALMemory", robotIP, 9559)        except Exception, e:            print "Could not create proxy to ALMemory"            print "Error was: ", e                try:            tts = ALProxy("ALTextToSpeech", robotIP, 9559)        except Exception, e:            print "Could not create proxy to ALTextToSpeech"            print "Error was: ", e             # Send NAO to Pose Init        postureProxy.goToPosture("StandInit", 0.5)                # setting the language for Nao        tts.setLanguage("English")                        #####################        ## Enable arms control by Walk algorithm        #####################        motionProxy.setWalkArmsEnabled(True, True)        #~ motionProxy.setWalkArmsEnabled(False, False)            #####################        ## FOOT CONTACT PROTECTION        #####################        motionProxy.setMotionConfig([["ENABLE_FOOT_CONTACT_PROTECTION", True]])                start = time.time()                      iE=self.state               if (command=="stop") :                    if iE ==0 :                        iE=1                        space      = motion.FRAME_ROBOT                        coef       = 2                   # motion speed                                                isAbsolute = False                                                # Motion of Arms with block process                        axisMask   = almath.AXIS_MASK_VEL  # control just the position                        times      = [0.5,2.0]  # seconds                        dy         = +0.06                 # translation axis Y (meters)                        # Motion of Right Arm during the first half of the Torso motion                        effector   = "RArm"                        path       = [                          [0.05, 00.0, 0.15, 0.0, 0.0, 0.0],  # point 1                          [0.00, 0.0, 0.35, 0.0, 0.0, 0.0]]  # point 2                        motionProxy.positionInterpolation(effector, space, path,                                                          axisMask, times, isAbsolute)                        time.sleep(1)                    elif iE==1:                        iE=0                        space      = motion.FRAME_ROBOT                        coef       = 2                   # motion speed                                                isAbsolute = False                                                # Motion of Arms with block process                        axisMask   = almath.AXIS_MASK_VEL  # control just the position                        times      = [2.0]  # seconds                        dy         = +0.06                 # translation axis Y (meters)                        # Motion of Right Arm during the first half of the Torso motion                        effector   = "RArm"                        path       = [                          [0.00, 00.0, 0.0, 0.0, 0.0, 0.0]]  # point 2                        motionProxy.positionInterpolation(effector, space, path,                                                          axisMask, times, isAbsolute)                        time.sleep(1)          self.state=iE        print("Arm is stand up")         #"def StiffnessOn(proxy):    #  the "Body" name to signify the collection of all joints#    pNames = "Body" #   pStiffnessLists = 1.0  #  pTimeLists = 1.0#    proxy.stiffnessInterpolation(pNames, pStiffnessLists, pTimeLists)